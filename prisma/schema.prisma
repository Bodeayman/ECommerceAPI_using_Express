// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init



datasource db {
  provider = "mysql"
  url      = env("CONNECTION_STRING")
}

generator client {
  provider = "prisma-client-js"
}



model User {
  id          Int         @id @default(autoincrement())
  name        String      @db.VarChar(255)
  email       String      @unique @db.VarChar(500)
  password    String      @db.VarChar(255)
  address     String?      @db.VarChar(255)
  credit_card String?      @db.VarChar(50)
  orders      Order[]
  ratings    Rating[]
}

model Product {
  id          Int          @id @default(autoincrement())
  name        String       @db.VarChar(255)
  price       Int
  descr       String       @db.VarChar(500)
  image_url   String?       @db.VarChar(500)
  refund      Boolean?
  quantity    Int?
  orderItems  OrderItem[]
   ratings    Rating[]
}

model Order {
  id             Int          @id @default(autoincrement()) // order_id
  userId         Int
  user           User         @relation(fields: [userId], references: [id])
  confirmedDate  DateTime?
  shippedDate    DateTime?
  shippingDate   DateTime?
  deliveryDate   DateTime?
  location       String       @db.VarChar(255)
  status         String       @db.VarChar(100)
  orderItems     OrderItem[]
}

model OrderItem {
  order       Order     @relation(fields: [orderId], references: [id])
  orderId     Int
  product     Product   @relation(fields: [productId], references: [id])
  productId   Int
  quantity    Int

  @@id([orderId, productId])
}
model Rating {
  id        Int      @id @default(autoincrement())
  rating    Int
  comment   String   @db.VarChar(500)
  userId    Int
  productId Int
  user      User     @relation(fields: [userId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}
